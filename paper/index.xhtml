<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link rel="stylesheet" type="text/css" href="styles.css"/>
	<title>From SVG to Canvas and Back</title>
	<meta name="description" content="Abstract of the presentation"/>
	<meta name="keywords" content="conference proceedings, keywords of the presentation"/>
</head>
<body>
	<div class="article" lang="en">
		<div class="titlepage">
	  		<div>
	   			<div>
	    			<h2 class="title"><a id="d4e1"/>From SVG to Canvas and Back</h2>
				</div>

	   			<!--<h3 class="subtitle"><i>Here is the subtitle</i></h3> -->
	   
			</div>
	   		<div>
		    	<div class="authorgroup">
					<div class="author"><h3 class="author"><span class="firstname">Samuli</span> <span class="surname">Kaipiainen</span></h3>
			 			<div class="personblurb"><p>University of Helsinki, Department of Computer Science<br/>samuli.kaipiainen@cs.helsinki.fi</p></div>
				 	</div>
				 	<div class="author"><h3 class="author"><span class="firstname">Matti</span> <span class="surname">Paksula</span></h3>
			 	  		<div class="personblurb"><p>University of Helsinki, Department of Computer Science<br/>matti.paksula@cs.helsinki.fi</p></div>
				 	</div>
					<br/>
	                <span class="org">
	                    <span class="orgname">University of Helsinki</span><br/>
	                    <span class="orgdiv">Department of Computer Science</span>

	                    <div class="address"><p>
	                        <span class="street">Gustaf Hällströmin katu 2b</span><br/>
	                        <span class="postcode">00014 University of Helsinki</span><br/>
	                        <span class="city">Helsinki</span><br/>

	                        <span class="country">Finland</span><br/>

<br/>
	                    </p></div>
	                </span>

				</div>
			</div>
	   
			<div>
		    	<div class="abstract">
					<hr/>
					<p class="title"><b>Abstract</b></p>
					<hr/>
					<p>
						Here is the text of the abstract
					</p>
				</div>
		   </div>
		</div>
		<hr/>
	</div>

  <div class="toc"><p><b>Table of Contents TODO</b></p>
  	<dl>
  		<dt><span class="section"><a href="#introduction">Introduction</a></span></dt>
  		<dt><span class="section"><a href="#motivation">Motivation: Complete Drawing Application</a></span></dt>
  		<dd>
  			<dl>
  				<dt><span class="section"><a href="#requirements">Requirements for a Web Based Drawing Application</a></span></dt>
			</dl>
  		</dd>
		<dt><span class="bibliography"><a href="#Biblio">Bibliography</a></span></dt>
  	</dl>
  </div>

	
	<div class="section" lang="en">
		<div class="titlepage">
			<div>
				<div>
					<h2 class="title" style="clear: both">
						<a id="introduction"/>
						Introduction
					</h2>
				</div>
			</div>
		</div>
		
		<p>At <a href="http://svgopen.org/2009/">SVG Open 2009</a> we presented a method of using the bitmap content of Canvas element in SVG as an image element.  This was done by utilizing <code>canvas.toDataURL()</code>-method that returns a base64-coded pixel representation of the canvas drawing context as a PNG image.  This data URI can be set as source for a SVG Image element.  In our demonstration we combined the best parts of SVG (vector drawing, native scene graph support) and Canvas (pixel drawing) in one trivial drawing application.  SVG to Canvas transfer was done in server-side, by rasterizing the image and then drawing that on a canvas element [<a class="xref" href="#TRIVIAL09">TRIVIAL09</a>].</p>
		
		<p>As the method for transferring Canvas to SVG was native in the browser (<code>toDataURL()</code>), the next step is obviously to do the same for SVG to Canvas instead of server-side conversion.  It would be tempting to use browsers native rendering, but unfortunately SVG does not support a <code>toDataURL()</code>-method.  There has been <a href="http://lists.w3.org/Archives/Public/public-svg-ig/2009OctDec/0004.html">some</a> <a href="http://lists.w3.org/Archives/Public/www-svg/2009Oct/0003.html">discussion</a> about adding same method to SVG, but this has some serious security issues that will be discussed in section TODO of this paper.</p>
		
		<p>In this paper we will show an experimental method for using the browsers native rendering support to render SVG on Canvas.  We will also present a complete list of the possible methods for using SVG together with Canvas.  Evaluation of these methods and application fits is also given.  In addition, we present a list of recommendations for browser manufacturers to implement for improved support and adaptation of SVG and Canvas.</p>
		
	</div>


	<div class="section" lang="en">
		<div class="titlepage">
			<div>
				<div>
					<h2 class="title" style="clear: both">
						<a id="motivation"/>
						Motivation: Complete Drawing Application
					</h2>
				</div>
			</div>
		</div>
		
		<p>Like in the paper we published last year, our motivation is drawing in the web: using the right techniques for the right things. (See "<a href="http://svgopen.org/2009/papers/54-SVG_vs_Canvas_on_Trivial_Drawing_Application/#d4e250">Combining existing components: SVG-Edit and CanvasPaint</a>")</p>
		
		<p>The need for interface between SVG and canvas is real and really required for efficent adaptation of SVG.  For example, SVG-edits <a href="http://code.google.com/p/svg-edit/issues/detail?id=70">issue #70</a>, "ability to save canvas as PNG" is currently solved with JavaScript+Canvas rendering workaround although a native implementation would be better [<a class="xref" href="#ISSUE70">ISSUE70</a>]. A list of rendering workarounds is given the TODO section of this paper.</p>
		
		<h3 class="title">
			<a id="requirements"/>
			Requirements for a Web Based Drawing Application
		</h3>

		<p>The following list shows requirements for a completely web based drawing application.  This list does not apply only for drawing applications: if every requirement would be supported natively by the browsers, it would make the adaptation of SVG and Canvas more popular.</p>

		<div class="itemizedlist">
			<ol>	
				<li><p>Pixel drawing</p></li>
				<li><p>Vector drawing</p></li>
				<li><p>Interfaces</p>
					<ol>
						<li style="list-style-type: lower-alpha"><p>Bitmap export and import (Canvas to SVG)</p></li>
						<li style="list-style-type: lower-alpha"><p>Vector rasterization and import (SVG to Canvas)</p></li>					
					</ol>
				</li>
				<li><p>Exporting</p>
					<ol>
						<li style="list-style-type: lower-alpha"><p>Export vectors (SVG DOM)</p></li>
						<li style="list-style-type: lower-alpha"><p>Export bitmap (Canvas bitmap)</p></li>					
					</ol>
				</li>
			</ol>
		</div>

		<p>Previous work shows the best technology fit for the requirements 1, 2 and 3.a, but used server-side rendering for 3.b requiring additional components.  In the next section we show and evaluate a method to use browsers native rendering of SVG to rasterize image in order to solve the interface requirement 3.b and exporting of rasterized image requirement 4.b.</p>
	</div>
	
	
	<div class="section" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="L1T2"/>Title 2 level 1</h2></div></div></div>
		
		<p>paragraph with a reference to an element of the bibliography
		<a class="xref" href="#BIBLIO1" title="Reference to an element of the bibliography">[REF1]</a> </p>

		<div class="orderedlist">
			<ol type="1">
				<li>
					<p>first item</p></li>
				<li>
					<p>second item</p></li>
				<li>
					<p>third item</p></li>

				<li>
					<p>fourth itel</p></li>
			</ol>
		</div>
		<p>
		paragraph
		</p>
		<div class="section" lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="L2T1"/>Title 1 Level 2</h3></div></div></div>

			
			<p>
				paragraph
				<code class="code">
					url
				</code>
				paragraph
			</p>
	<p>
				text
				</p>
				<div class="figure"><a id="course_webpage"/>

				  <div class="figure-contents">
					
					<div class="mediaobject"><img src="./image.jpg" alt="file of the figure"/></div>
				  </div>
				  <p class="title"><b>Figure 1.Text for the figure 1</b></p>
				</div>
				<p><br class="figure-break"/>
				here is an svg code: no-formatted text. Be careful to the &gt; and &lt; characters
				</p>

				<pre class="programlisting">
				
&lt;?xml version="1.0" ?>
&lt;svg   baseProfile="full"   xmlns="http://www.w3.org/2000/svg"   xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:ev="http://www.w3.org/2001/xml-events" width="160" height="160">
&lt;title> Chat&lt;/title>
&lt;desc>Dessin d'un chat&lt;/desc>

&lt;!-- tete et yeux -->
&lt;circle cx="70" cy="95" r="50" style="stroke: black; fill: none"/>
&lt;circle cx="55" cy="80" r="5" stroke="black" fill="#339933"/>
&lt;circle cx="85" cy="80" r="5" stroke="black" fill="#339933"/>

&lt;!-- moustaches -->
&lt;g id="moustaches" >
  &lt;line x1="75" y1="95" x2="135" y2="105" style="stroke: black;" />
  &lt;line x1="75" y1="95" x2="135" y2="85" style="stroke: black;" />

&lt;/g>
&lt;use xlink:href="#moustaches" transform="scale(-1 1) translate(-140 0)" />

&lt;!-- oreilles du chat -->
&lt;defs>
  &lt;g id="oreilles" >
    &lt;polyline points="108 62, 90 10, 70 45" stroke="blue" fill="none" />
  &lt;/g>
&lt;/defs>

&lt;use xlink:href="#oreilles"  />
&lt;use xlink:href="#oreilles" transform="translate(140 0) scale(-1 1) " />

&lt;!-- sourire du chat -->
&lt;polyline  id="levres" points="35 110, 45 120, 95 120,105 110" stroke="red" fill="none" />
&lt;use xlink:href="#levres" transform="translate(0 2)" />
&lt;/svg>
</pre>
			</div>

			<div class="bibliography">
				<div class="titlepage">
					<div>
						<div>
							<h2 class="title">
								<a id="Biblio"/>
								Bibliography
							</h2>
						</div>
					</div>
				</div>
				
				<div class="biblioentry">
					<a id="TRIVIAL09"/>
					<p>[<abbr class="abbrev">TRIVIAL09</abbr>] 
			
						<span class="author"><span class="firstname">Samuli</span> <span class="surname">Kaipiainen</span></span>
						and
						<span class="author"><span class="firstname">Matti</span> <span class="surname">Paksula</span></span>:
					
						<span class="title"><i>SVG vs Canvas on Trivial Drawing Application</i>. </span>
						<br/>
						<span class="publisher">
							<span class="publishername">Proceedings of the 7th International Conference on Scalable Vector Graphics</span>
						</span>
						<br/>
						<span class="url">
							<a href="http://svgopen.org/2009/papers/54-SVG_vs_Canvas_on_Trivial_Drawing_Application/">http://svgopen.org/2009/papers/54-SVG_vs_Canvas_on_Trivial_Drawing_Application/</a>
						</span>

					</p>
				</div>

				<div class="biblioentry">
					<a id="ISSUE70"/>
					<p>[<abbr class="abbrev">ISSUE70</abbr>] 
								
						<span class="title"><i>SVG-Edit Issue #70: Ability to save canvas as PNG</i>. </span>
						<br/>
						<span class="publisher">
							<span class="publishername">SVG-Edit Issues</span>
						</span>
						<br/>
						<span class="url">
							<a href="http://code.google.com/p/svg-edit/issues/detail?id=70">http://code.google.com/p/svg-edit/issues/detail?id=70</a>
						</span>

					</p>
				</div>
			
			</div>

		</div>
	</body>
</html>